apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-ai-assistant
  namespace: default
  labels:
    app: k8s-ai-assistant
    component: agent
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-ai-assistant
  labels:
    app: k8s-ai-assistant
    component: rbac
rules:
# Core resources for monitoring and remediation
- apiGroups: [""]
  resources: 
    - pods
    - pods/log
    - pods/status
    - nodes
    - nodes/status
    - persistentvolumes
    - persistentvolumeclaims
    - services
    - endpoints
    - events
    - namespaces
    - configmaps
    - secrets
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Apps resources for deployment management
- apiGroups: ["apps"]
  resources:
    - deployments
    - deployments/scale
    - replicasets
    - statefulsets
    - daemonsets
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Batch resources for job management
- apiGroups: ["batch"]
  resources:
    - jobs
    - cronjobs
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Networking resources
- apiGroups: ["networking.k8s.io"]
  resources:
    - ingresses
    - networkpolicies
  verbs: ["get", "list", "watch"]

# Storage resources
- apiGroups: ["storage.k8s.io"]
  resources:
    - storageclasses
    - volumeattachments
  verbs: ["get", "list", "watch"]

# Metrics access (if metrics-server is installed)
- apiGroups: ["metrics.k8s.io"]
  resources:
    - nodes
    - pods
  verbs: ["get", "list"]

# Custom resources for advanced monitoring
- apiGroups: ["apiextensions.k8s.io"]
  resources:
    - customresourcedefinitions
  verbs: ["get", "list", "watch"]

# Node operations (drain, cordon)
- apiGroups: [""]
  resources:
    - nodes
  verbs: ["get", "list", "watch", "update", "patch"]

# Pod eviction for node draining
- apiGroups: [""]
  resources:
    - pods/eviction
  verbs: ["create"]

# Policy resources
- apiGroups: ["policy"]
  resources:
    - poddisruptionbudgets
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-ai-assistant
  labels:
    app: k8s-ai-assistant
    component: rbac
subjects:
- kind: ServiceAccount
  name: k8s-ai-assistant
  namespace: default
roleRef:
  kind: ClusterRole
  name: k8s-ai-assistant
  apiGroup: rbac.authorization.k8s.io

---
# Additional role for namespace-specific operations
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: k8s-ai-assistant-namespace
  labels:
    app: k8s-ai-assistant
    component: rbac
rules:
# Secrets management for storing API keys, configs
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# ConfigMaps for configuration storage
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Service accounts management
- apiGroups: [""]
  resources: ["serviceaccounts"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: k8s-ai-assistant-namespace
  namespace: default
  labels:
    app: k8s-ai-assistant
    component: rbac
subjects:
- kind: ServiceAccount
  name: k8s-ai-assistant
  namespace: default
roleRef:
  kind: Role
  name: k8s-ai-assistant-namespace
  apiGroup: rbac.authorization.k8s.io